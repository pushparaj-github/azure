# Connect to Azure
Connect-AzAccount

# Path to the CSV file
$csvFilePath = "C:\path\to\your\vm_list.csv"

# Import the CSV file
# Ensure the CSV contains a single column: VMName
$vms = Import-Csv -Path $csvFilePath

# Loop through each VM in the CSV file
foreach ($vm in $vms) {
    $vmName = $vm.VMName
    $vmFound = $false

    # Loop through all subscriptions
    $subscriptions = Get-AzSubscription
    foreach ($subscription in $subscriptions) {
        # Set the current subscription
        Set-AzContext -SubscriptionId $subscription.SubscriptionId

        # Check if the VM exists in this subscription
        $vmDetails = Get-AzVM -Status | Where-Object { $_.Name -eq $vmName }
        if ($vmDetails) {
            $vmFound = $true
            $resourceGroup = $vmDetails.ResourceGroupName

            # Output subscription and resource group information
            Write-Host "VM Name: $vmName - Found in Subscription: $($subscription.Name) - Resource Group: $resourceGroup"

            # Check the current power state of the VM
            $status = $vmDetails.Statuses | Where-Object { $_.Code -like "PowerState*" }

            # Output current status
            Write-Host "VM Name: $vmName - Status: $($status.DisplayStatus)"

            # If the VM is deallocated or stopped, start it
            if ($status.Code -eq "PowerState/deallocated" -or $status.Code -eq "PowerState/stopped") {
                Write-Host "Starting VM: $vmName"
                Start-AzVM -ResourceGroupName $resourceGroup -Name $vmName
            } else {
                Write-Host "VM $vmName is already running."
            }

            break
        }
    }

    if (-not $vmFound) {
        Write-Host "VM $vmName not found in any subscription. Skipping..." -ForegroundColor Yellow
    }
}

Write-Host "Script completed."
